Option Explicit
Option Base 1

Sub MacmillanManuscriptCleanup()

'-----make sure Style template is attached
Dim keyStyle As Word.Style
Dim styleCheck As Boolean
On Error Resume Next
Set keyStyle = ActiveDocument.Styles("boldface characters (bf)")                '''Style from template to check against
styleCheck = keyStyle Is Nothing
If styleCheck Then
MsgBox "Requred style template 'macmillan.dotx' is not attached", , "Error"
Exit Sub
End If

'Clear Find & Replace Objects
Call ClearFindReplace

'-----------Remove White Space------------
Call RmWhiteSpace
'Clear Find & Replace Objects
Call ClearFindReplace

'-----------Replace Local Styles-----------
Call StripOrReplaceLocalStyles
'Clear Find & Replace Objects
Call ClearFindReplace

'------Remove highlights
Call RmHighlights
'Clear Find & Replace Objects
Call ClearFindReplace

End Sub

Sub RmWhiteSpace()

Dim activeRng As Range
Set activeRng = ActiveDocument.Range

Dim wsFindArray(9) As String              'number of items in array should be declared here
Dim wsReplaceArray(9) As String       'and here
Dim i As Long

wsFindArray(1) = "^t{1,}"             'tabs
wsFindArray(2) = "^l{1,}"               'manual line breaks
wsFindArray(3) = "^m{1,}"              'manual page breaks
wsFindArray(4) = " {2,}"               '2 or more spaces
wsFindArray(5) = "^13 "               'paragraph, space
wsFindArray(6) = " ^13"               'space, paragraph
wsFindArray(7) = "^13{2,}"          '2 or more paragraphs
wsFindArray(8) = "---"                   '3 hyphens
wsFindArray(9) = "--"                   '2 hyphens


wsReplaceArray(1) = ""
wsReplaceArray(2) = "^p"
wsReplaceArray(3) = "^p"
wsReplaceArray(4) = " "
wsReplaceArray(5) = "^p"
wsReplaceArray(6) = "^p"
wsReplaceArray(7) = "^p"
wsReplaceArray(8) = "^+"            'emdash
wsReplaceArray(9) = "^="            'endash



Application.ScreenUpdating = False

For i = 1 To UBound(wsFindArray())

With activeRng.Find
  .ClearFormatting
  .Replacement.ClearFormatting
  .Text = wsFindArray(i)
  .Replacement.Text = wsReplaceArray(i)
  .Forward = True
  .Wrap = wdFindContinue
  .Format = False
  .MatchCase = False
  .MatchWholeWord = False
  .MatchWildcards = True
  .MatchSoundsLike = False
  .MatchAllWordForms = False
  .Execute Replace:=wdReplaceAll
End With

Next

Application.ScreenUpdating = True
Application.ScreenRefresh

End Sub

Sub StripOrReplaceLocalStyles()

Dim activeRng As Range
Set activeRng = ActiveDocument.Range

Application.ScreenUpdating = False

'------------tag key styles

Dim tagStyleFindArray(4) As Boolean              ' number of items in array should be declared here
Dim tagStyleReplaceArray(4) As String         'and here
Dim g As Long

tagStyleFindArray(1) = False        'Bold
tagStyleFindArray(2) = False        'Italic
tagStyleFindArray(3) = False        'Underline
tagStyleFindArray(4) = False        'Smallcaps

tagStyleReplaceArray(1) = "`b`^&`b`"
tagStyleReplaceArray(2) = "`i`^&`i`"
tagStyleReplaceArray(3) = "`u`^&`u`"
tagStyleReplaceArray(4) = "`s`^&`s`"

For g = 1 To UBound(tagStyleFindArray())
tagStyleFindArray(g) = True

With activeRng.Find
  .ClearFormatting
  .Replacement.ClearFormatting
  .Text = ""
  .Replacement.Text = tagStyleReplaceArray(g)
  .Forward = True
  .Wrap = wdFindContinue
  .Format = True
  .Font.Bold = tagStyleFindArray(1)
  .Font.Italic = tagStyleFindArray(2)
  .Font.Underline = tagStyleFindArray(3)
  .Font.SmallCaps = tagStyleFindArray(4)
  .MatchCase = False
  .MatchWholeWord = False
  .MatchWildcards = True
  .MatchSoundsLike = False
  .MatchAllWordForms = False
  .Execute Replace:=wdReplaceAll
End With

tagStyleFindArray(g) = False
Next

'-------------Reset everything
activeRng.Font.Reset

'Clear Find & Replace Objects
Call ClearFindReplace

'-------------apply styles to tags

Dim tagFindArray(4) As String              ' number of items in array should be declared here
Dim tagReplaceArray(4) As String         'and here
Dim h As Long

tagFindArray(1) = "`b`(*)`b`"
tagFindArray(2) = "`i`(*)`i`"
tagFindArray(3) = "`u`(*)`u`"
tagFindArray(4) = "`s`(*)`s`"

tagReplaceArray(1) = ActiveDocument.Styles("boldface characters (bf)")
tagReplaceArray(2) = ActiveDocument.Styles("italic characters (ital)")
tagReplaceArray(3) = ActiveDocument.Styles("underscore characters (us)")
tagReplaceArray(4) = ActiveDocument.Styles("SMALL CAPS CHARACTERS (SC)")

Application.ScreenUpdating = False

For h = 1 To UBound(tagFindArray())
With activeRng.Find
  .ClearFormatting
  .Replacement.ClearFormatting
  .Text = tagFindArray(h)
  .Replacement.Text = "\1"
  .Forward = True
  .Wrap = wdFindContinue
  .Format = True
  .Replacement.Style = tagReplaceArray(h)
  .MatchCase = False
  .MatchWholeWord = False
  .MatchWildcards = True
  .MatchSoundsLike = False
  .MatchAllWordForms = False
  .Execute Replace:=wdReplaceAll
End With
Next

Application.ScreenUpdating = True
Application.ScreenRefresh

End Sub

Sub RmHighlights()

Dim activeRng As Range
Set activeRng = ActiveDocument.Range

Application.ScreenUpdating = False

With activeRng.Find
  .ClearFormatting
  .Replacement.ClearFormatting
  .Text = ""
  .Wrap = wdFindContinue
  .Format = True
  .Highlight = True
  .Replacement.Highlight = False
  .Execute Replace:=wdReplaceAll
End With

Application.ScreenUpdating = True
Application.ScreenRefresh

End Sub

Sub ClearFindReplace()

Dim clearRng As Range
Set clearRng = ActiveDocument.Words.First

With clearRng.Find
  .ClearFormatting
  .Replacement.ClearFormatting
  .Text = ""
  .Replacement.Text = ""
  .Forward = True
  .Wrap = wdFindStop
  .Format = False
  .MatchCase = False
  .MatchWholeWord = False
  .MatchWildcards = False
  .MatchSoundsLike = False
  .MatchAllWordForms = False
  .Execute
End With

End Sub