Sub zz_AttachStyleTemplate()


''''''''''''''''''''''''''''''''
'''created by Matt Retzer  - matthew.retzer@macmillan.com
'''version 3.0
'''last updated 1/30/15
'''updated by Erica Warren: added PCupdateCheck sub

Dim TheOS As String
Dim myFile As String
Dim template As String
Dim myFilePC As String
Dim myFileMac As String
TheOS = System.OperatingSystem
template = "macmillan.dotm"
myFilePC = "C:\ProgramData\MacmillanStyleTemplate\" & template
myFileMac = "Macintosh HD:Users:Shared:MacmillanStyleTemplate:" & template

'Set template path according to OS
If Not TheOS Like "*Mac*" Then
                                   'I am Windows
    Call PCupdateCheck(template)
    myFile = myFilePC
Else
    myFile = myFileMac                              'I am a Mac
End If

'Apply template with Styles
With ActiveDocument
    .UpdateStylesOnOpen = True
    .AttachedTemplate = myFile
End With
End Sub

Sub zz_AttachBoundMSTemplate()

'''copy of Sub zz_AttachStyleTemplate()
'''but to attach a template without color guides
'''updated 1/30/2015 by Erica Warren: added PCupdateCheck.

Dim TheOS As String
Dim myFile As String
Dim template As String
Dim myFilePC As String
Dim myFileMac As String
TheOS = System.OperatingSystem
template = "macmillan_NoColor.dotm"
myFilePC = "C:\ProgramData\MacmillanStyleTemplate\" & template
myFileMac = "Macintosh HD:Users:Shared:MacmillanStyleTemplate:" & template

'Set template path according to OS
If Not TheOS Like "*Mac*" Then              'I am Windows
    Call PCupdateCheck(template)
    myFile = myFilePC
Else
    myFile = myFileMac                              'I am a Mac
End If

'Apply template with Styles
With ActiveDocument
    .UpdateStylesOnOpen = True
    .AttachedTemplate = myFile
End With
End Sub


'''created by Matt Retzer  - matthew.retzer@macmillan.com
'''update by Erica Warren - erica.warren@macmillan.com
'''version 1.0
'''last updated 1/30/2015: PC version works with macmillan.dotm & macmillan_NoColor.dotm

Private Sub PCupdateCheck(templateFile As String)

Dim dirNamePC As String
Dim dirNameBash As String
Dim dirNameMac As String
Dim logFileName As String
Dim logFilePC As String
Dim logFileMac As String
Dim currentUser As String                   'could set for MAc & PC   Does pre-binding matter?
Dim updateCheck As Boolean
Dim updateFrequency As Integer
Dim logString As String                         'could  set a few values for this up front
Dim lastModDate As Date
Dim cvUrl As String
Dim currentVersionST As String              'ST=StyleTemplate
Dim installedVersionST As String
Dim downloadLinkST As String
Dim localDrive As String


logFileName = "macmillan_macros.log"
updateCheck = True
updateFrequency = 1         'number of days between update checks
logString = ""
cvUrl = "https://macmillan.atlassian.net/wiki/display/PBL/Test"
installedVersionST = "(none installed)"         'default

                                                                         ''''''PCs
'''set PC vars
currentUser = Environ("USERNAME")
localDrive = Environ("PROGRAMDATA") & "\MacmillanStyleTemplate"             'use variable because not everyone has local drive set as C:
dirNamePC = localDrive & "\log"
logFilePC = dirNamePC & "\" & logFileName                      'if we need to do this on C we can use currentUser
    
    
'''check if logfile exists
If Dir(logFilePC) <> vbNullString Then        '''file exists
    ''get date modified of logfile
    lastModDate = FileDateTime(logFilePC)
        
        '''compare with current date - if not today
        If DateDiff("d", lastModDate, Date) < updateFrequency Then
            updateCheck = False
            logString = Now & " -- updateCheck = " & updateCheck & ". Already checked today."
        End If
            
Else   ''''create directory if no exist                                                                                                                      '''file does not exist
    
    '''Check if MacmillanStyleTemplate folder exists
    If Dir(localDrive, vbDirectory) = vbNullString Then
        MkDir (localDrive)
        MkDir (dirNamePC)
        logString = Now & " -- created MacmillanStyleTemplate directory"
    Else ' Just create log folder
        If Dir(dirNamePC, vbDirectory) = vbNullString Then
            MkDir (dirNamePC)
        End If
        logString = Now & " -- created logfile "
    
    End If
    
End If

    
'''run log setup sub
LogInformation logFilePC, logString

If updateCheck = True Then       'toggle this to -True- to test further business
    Exit Sub
    
Else ' updateCheck is still True

    'Get version number of installed style template
    Dim pcTemplatePath As String
    
    If Dir(localDrive & "\" & templateFile) = vbNullString Then
        installedVersionST = 0
    Else
        pcTemplatePath = localDrive & "\" & templateFile
        Documents.Open FileName:=pcTemplatePath, ReadOnly:=True, Visible:=False
        installedVersionST = Documents(pcTemplatePath).CustomDocumentProperties("version")
        Documents(pcTemplatePath).Close
    End If
    
    'try to download current versions text file
    Dim myURL As String
    Dim WinHttpReq As Object
    Dim oStream As Object
    myURL = "https://macmillan.atlassian.net/wiki/download/attachments/9044274/Versions"

    Set WinHttpReq = CreateObject("Microsoft.XMLHTTP")
    WinHttpReq.Open "GET", myURL, False
    On Error Resume Next
    WinHttpReq.Send

        ' Exit sub if error in connecting to website
        
        If Err.Number <> 0 Then 'request is not OK
            LogInformation logFilePC, Now & " -- tried update; unable to connect to website"
            Exit Sub
        End If

    If WinHttpReq.Status = 200 Then  ' 200 = HTTP request is OK
    
        'if connection OK, download file and save to log directory
        myURL = WinHttpReq.responseBody
        Set oStream = CreateObject("ADODB.Stream")
        oStream.Open
        oStream.Type = 1
        oStream.Write WinHttpReq.responseBody
        oStream.SaveToFile dirNamePC & "\versions.txt", 2 ' 1 = no overwrite, 2 = overwrite
        oStream.Close
        Set oStream = Nothing
        Set WinHttpReq = Nothing
    End If
End If
    
'Get version number of current template
Dim g_strVar As String
g_strVar = ImportVariable(dirNamePC & "\versions.txt")
currentVersionST = g_strVar
    
'If installed = current
If installedVersionST >= currentVersionST Then
    LogInformation logFilePC, Now & " -- current & installed versions match (current version is " & currentVersionST & "). "
    Exit Sub
Else
    'download the templates files
    myURL = "https://macmillan.atlassian.net/wiki/download/attachments/9044274/" & templateFile
    Set WinHttpReq = CreateObject("Microsoft.XMLHTTP")
    WinHttpReq.Open "GET", myURL, False
    WinHttpReq.Send
    
    If WinHttpReq.Status = 200 Then  ' 200 = HTTP request is OK
        myURL = WinHttpReq.responseBody
        Set oStream = CreateObject("ADODB.Stream")
        oStream.Open
        oStream.Type = 1
        oStream.Write WinHttpReq.responseBody
        oStream.SaveToFile dirNamePC & "\macmillanNew.dotm", 2 ' 1 = no overwrite, 2 = overwrite
        oStream.Close
        Set oStream = Nothing
        Set WinHttpReq = Nothing
    End If
    
    'log the download.
    LogInformation logFilePC, Now & " -- Downloaded new " & templateFile & " Style Template version: " & currentVersionST & "  (Installed version was " & installedVersionST & ")"
    
    'remove existing template file
        'Check that file exists
        If Dir(localDrive & "\" & templateFile) <> "" Then
        Kill localDrive & "\" & templateFile
        End If

    'replace existing file
    Name dirNamePC & "\macmillanNew.dotm" As localDrive & "\" & templateFile
    LogInformation logFilePC, Now & " -- Replaced existing " & templateFile & " Style Template.  Telling user to relaunch Word."

    MsgBox "The Macmillan Style Template has been upgraded on your computer." & vbNewLine & vbNewLine & "Please RE-LAUNCH WORD for the updated Style Template to take effect!", , "ACTION REQUIRED"
    
End If
End Sub



Private Sub LogInformation(logFile As String, LogMessage As String)

Dim FileNum As Integer
    FileNum = FreeFile ' next file number
    Open logFile For Append As #FileNum ' creates the file if it doesn't exist
    Print #FileNum, LogMessage ' write information at the end of the text file
    Close #FileNum ' close the file
End Sub



Private Function ImportVariable(strFile As String) As String
 
    Open strFile For Input As #1
    Line Input #1, ImportVariable
    Close #1
 
End Function