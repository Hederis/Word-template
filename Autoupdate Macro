Option Explicit
Option Base 1

'''created by Matt Retzer  - matthew.retzer@macmillan.com
'''update by Erica Warren - erica.warren@macmillan.com
'''version 1.0
'''updated 1/27/2015: PC version works - erica
'''last updated 1/30/2015:  Mac version tightened up - matt
'''will eventually be combined with attach template macro

Sub PCupdateCheck()

Dim dirNamePC As String
Dim dirNameBash As String
Dim dirNameMac As String
Dim logFileName As String
Dim logFilePC As String
Dim logFileMac As String
Dim currentUser As String                   'could set for MAc & PC   Does pre-binding matter?
Dim updateCheck As Boolean
Dim updateFrequency As Integer
Dim logString As String                         'could  set a few values for this up front
Dim lastModDate As Date
Dim cvUrl As String
Dim currentVersionST As String              'ST=StyleTemplate
Dim installedVersionST As String
Dim downloadLinkST As String
Dim localDrive As String
Dim templateFile As String

templateFile = "macmillan.dotm"

logFileName = "macmillan_macros.log"
updateCheck = True
updateFrequency = 1         'number of days between update checks
logString = ""
cvUrl = "https://macmillan.atlassian.net/wiki/display/PBL/Test"
installedVersionST = "(none installed)"         'default

                                                                         ''''''PCs
'''set PC vars
currentUser = Environ("USERNAME")
localDrive = Environ("PROGRAMDATA") & "\MacmillanStyleTemplate" 'use variable because not everyone has local drive set as C:
dirNamePC = localDrive & "\log"
logFilePC = dirNamePC & "\" & logFileName                      'if we need to do this on C we can use currentUser
    
    
'''check if logfile exists
If Dir(logFilePC) <> vbNullString Then        '''file exists
    ''get date modified of logfile
    lastModDate = FileDateTime(logFilePC)
        
        '''compare with current date - if not today
        If DateDiff("d", lastModDate, Date) < updateFrequency Then
            updateCheck = False
            logString = Now & " -- updateCheck = " & updateCheck & ". Already checked today."
        End If
            
Else   ''''create directory if no exist                                                                                                                      '''file does not exist
    
    '''Check if MacmillanStyleTemplate folder exists
    If Dir(localDrive, vbDirectory) = vbNullString Then
        MkDir (localDrive)
        MkDir (dirNamePC)
        logString = Now & " -- created MacmillanStyleTemplate and logfile "
    Else ' Just create log folder
        MkDir (dirNamePC)
        logString = Now & " -- created logfile "
    
    End If
    
End If

    
'''run log setup sub
LogInformation logFilePC, logString

If updateCheck = True Then       'toggle this to -True- to test further business
    Exit Sub
    
Else ' updateCheck is still True

    'Get version number of installed style template
    Dim pcTemplatePath As String
    
    If Dir(localDrive & "\" & templateFile) <> "" Then
        pcTemplatePath = localDrive & "\" & templateFile
        Documents.Open FileName:=pcTemplatePath, ReadOnly:=True, Visible:=False
        installedVersionST = Documents(pcTemplatePath).CustomDocumentProperties("version")
        Documents(pcTemplatePath).Close
    Else
        installedVersionST = 0
    End If
    
    'try to download current versions text file
    Dim myURL As String
    Dim WinHttpReq As Object
    Dim oStream As Object
    myURL = "https://macmillan.atlassian.net/wiki/download/attachments/9044274/Versions"

    Set WinHttpReq = CreateObject("Microsoft.XMLHTTP")
    WinHttpReq.Open "GET", myURL, False
    On Error Resume Next
    WinHttpReq.Send

        ' Exit sub if error in connecting to website
        
        If Err.Number <> 0 Then 'request is not OK
            LogInformation logFilePC, Now & " -- tried update; unable to connect to website"
            Exit Sub
        End If

    If WinHttpReq.Status = 200 Then  ' 200 = HTTP request is OK
    
        'if connection OK, download file and save to log directory
        myURL = WinHttpReq.responseBody
        Set oStream = CreateObject("ADODB.Stream")
        oStream.Open
        oStream.Type = 1
        oStream.Write WinHttpReq.responseBody
        oStream.SaveToFile dirNamePC & "\versions.txt", 2 ' 1 = no overwrite, 2 = overwrite
        oStream.Close
        Set oStream = Nothing
        Set WinHttpReq = Nothing
    End If
End If
    
'Get version number of current template
Dim g_strVar As String
g_strVar = ImportVariable(dirNamePC & "\versions.txt")
currentVersionST = g_strVar
    
'If installed = current
If installedVersionST >= currentVersionST Then
    LogInformation logFilePC, Now & " -- current & installed versions match (current version is " & currentVersionST & "). "
    Exit Sub
Else
    'download the templates files
    myURL = "https://macmillan.atlassian.net/wiki/download/attachments/9044274/macmillan.dotm"
    Set WinHttpReq = CreateObject("Microsoft.XMLHTTP")
    WinHttpReq.Open "GET", myURL, False
    WinHttpReq.Send
    
    If WinHttpReq.Status = 200 Then  ' 200 = HTTP request is OK
        myURL = WinHttpReq.responseBody
        Set oStream = CreateObject("ADODB.Stream")
        oStream.Open
        oStream.Type = 1
        oStream.Write WinHttpReq.responseBody
        oStream.SaveToFile dirNamePC & "\macmillanNew.dotm", 2 ' 1 = no overwrite, 2 = overwrite
        oStream.Close
        Set oStream = Nothing
        Set WinHttpReq = Nothing
    End If
    
    'log the download.
    LogInformation logFilePC, Now & " -- Downloaded new " & templateFile & " Style Template version: " & currentVersionST & "  (Installed version was " & installedVersionST & ")"
    
    'remove existing template file
        'Check that file exists
        If Dir(localDrive & "\" & templateFile) <> "" Then
        Kill localDrive & "\" & templateFile
        End If

    'replace existing file
    Name dirNamePC & "\macmillanNew.dotm" As localDrive & "\" & templateFile
    LogInformation logFilePC, Now & " -- Replaced existing " & templateFile & " Style Template.  Telling user to relaunch Word."

    MsgBox "The Macmillan Style Template has been upgraded on your computer." & vbNewLine & vbNewLine & "Please RE-LAUNCH WORD for the updated Style Template to take effect!", , "ACTION REQUIRED"
    
End If
End Sub


Sub MacUpdateCheck()                           'once bundled with GT, Sub declaration line will include passed var like so:
                                                                    'Sub MacUpdateCheck(templateFile As String)
Dim templateFile As String                      'and this  templateFile declarations will be deleted
templateFile = "macmillan.dotm"             ' & this one
           
Dim dirNamePC As String
Dim dirNameBash As String
Dim dirNameMac As String
Dim logFileName As String
Dim logFilePC As String
Dim logFileMac As String
Dim currentUser As String                   'could set for MAc & PC   Does pre-binding matter?
Dim updateCheck As Boolean
Dim updateFrequency As Integer
Dim logString As String                         'could  set a few values for this up front
Dim lastModDate As Date
Dim cvUrl As String                                 'cvUrl = currentVersionUrl
Dim dlUrl As String                                  'download Url
Dim currentVersionST As String              'ST=StyleTemplate
Dim installedVersionST As String
Dim localDrive As String

'''set update variables
updateCheck = True                                      'default
updateFrequency = 1                                     'number of days between update checks
logString = "created logfile: " & Now               'for first run ; any other outcome results in this string being reset
cvUrl = "https://macmillan.atlassian.net/wiki/display/PBL/Test"
dlUrl = "https://macmillan.atlassian.net/wiki/download/attachments/9044274"
installedVersionST = "(none installed)"         'default

'''set Mac vars
'could do currentUSer via shell but OSA is a cleaner command
currentUser = MacScript("tell application " & Chr(34) & "System Events" & Chr(34) & Chr(13) & "return (name of current user)" & Chr(13) & "end tell")
dirNameBash = "/Users/" & currentUser & "/Documents/MacmillanStyleTemplate"
dirNameMac = "Macintosh HD:Users:" & currentUser & ":Documents:MacmillanStyleTemplate:"
logFileName = "macmillan_macros_update.log"
logFileMac = dirNameMac & logFileName
            
'''see when last checked for updates
'''check if logfile exists
    If ShellAndWaitMac("[ -e " & dirNameBash & "/" & logFileName & " ] ; echo $?") = 0 Then                         '''file exists
            '''get date modified of logfile
            lastModDate = FileDateTime(logFileMac)
            '''compare with current date - if not today
            If DateDiff("d", lastModDate, Date) < updateFrequency Then
                   updateCheck = False
                   logString = Now & " -- updateCheck = " & updateCheck & ". Already checked in the last " & updateFrequency & " day(s)."
            Else
                   logString = Now & " -- updateCheck = " & updateCheck
            End If
'''This is either first update or first run ; verify/create directories & create logfile
    Else                                                                                                                         '''file does not exist
            ShellAndWaitMac ("[ -e " & dirNameBash & " ] &>/dev/null || mkdir -p " & dirNameBash)
    End If
'''run log setup sub
LogInformation logFileMac, logString

'updateCheck = True '*******  for DEBUG ONLY

'''Here begins the updating
    If updateCheck = False Then
            Exit Sub
    Else
            'check for network.  Skipping domain since we are looking at confluence, but would test ping hbpub.net or mpl.root-domain.org
            If ShellAndWaitMac("ping -o macmillan.atlassian.net &> /dev/null ; echo $?") <> 0 Then
                    LogInformation logFileMac, Now & " -- tried update; unable to connect to atlassian website (check network connectivity)"
                    Exit Sub
            Else
                    'check current Version if it exists, exit if it matches
                    If ShellAndWaitMac("[ -e " & dirNameBash & "/" & templateFile & " ] ; echo $?") = 0 Then
                            currentVersionST = ShellAndWaitMac("curl -s " & cvUrl & " | grep -m 1 macmillan.dotm | awk -F'Version' '{print$2}' | awk '{print$1}'")
                            installedVersionST = ShellAndWaitMac("cp -rfp " & dirNameBash & "/" & templateFile & " /private/tmp/macmillan.zip ; unzip -qu /private/tmp/macmillan.zip -d /private/tmp ; cat /private/tmp/docProps/custom.xml | awk -F'vt:lpwstr' '{print $2}' | tr -d '<>/\\n'")
                            'MsgBox currentVersionST & ", " & installedVersionST     '<-for debug
                            'cleanup tmp
                            ShellAndWaitMac ("rm -f /private/tmp/Macmillan* /private/tmp/macmillan*")
                            If currentVersionST = installedVersionST Then
                                    LogInformation logFileMac, Now & " -- current & installed versions match (" & currentVersionST & ").  Style Template already up to date"
                                    updateCheck = False
                                    Exit Sub
                            End If
                    Else
                            'No template present, proceeding with download - gettign current version for log
                            currentVersionST = ShellAndWaitMac("curl -s " & cvUrl & " | grep -m 1 macmillan.dotm | awk -F'Version' '{print$2}' | awk '{print$1}'")
                            LogInformation logFileMac, Now & " -- Style Template not present, updateCheck = " & updateCheck & ".  Downloading"
                    End If
            End If
    End If

'''download file to tmp
    ShellAndWaitMac ("rm -f /private/tmp/macmillanNew.dotm ; curl -o /private/tmp/macmillanNew.dotm " & dlUrl & "/" & templateFile)
    LogInformation logFileMac, Now & " -- Downloaded new Style Template version: " & currentVersionST & ".  (installed version was " & installedVersionST & ")"

'''remove existing file:  could Kill dirNameMac & "macmillan.dotm"  But Using rm for one liner
    ShellAndWaitMac ("rm -f " & dirNameBash & "/" & templateFile & " &>/dev/null")

'''replace existing file
    Name "Macintosh HD:private:tmp:macmillanNew.dotm" As dirNameMac & templateFile
    'download Versions file so version is readily visible from client Mac
    ShellAndWaitMac ("rm -f  " & dirNameBash & "/Version-* ; curl -o " & dirNameBash & "/Version-" & templateFile & ".txt " & dlUrl & "/Versions")
    LogInformation logFileMac, Now & " -- Replaced existing Style Template.  Telling user to relaunch Word."
    
    MsgBox "The Macmillan Style Template " & templateFile & " has been upgraded on your Mac." & vbNewLine & vbNewLine & "Please RE-LAUNCH WORD for the updated Style Template to take effect!", , "ACTION REQUIRED"

End Sub


Private Sub LogInformation(logFile As String, LogMessage As String)

Dim FileNum As Integer
    FileNum = FreeFile ' next file number
    Open logFile For Append As #FileNum ' creates the file if it doesn't exist
    Print #FileNum, LogMessage ' write information at the end of the text file
    Close #FileNum ' close the file
End Sub

Private Function ShellAndWaitMac(cmd As String) As String

Dim result As String
Dim scriptCmd As String ' Macscript command
'
scriptCmd = "do shell script """ & cmd & """"
result = MacScript(scriptCmd) ' result contains stdout, should you care
ShellAndWaitMac = result
End Function

Private Function ImportVariable(strFile As String) As String
 
    Open strFile For Input As #1
    Line Input #1, ImportVariable
    Close #1
 
End Function



