Option Explicit

Sub BookmakerReqs()
'-----------------------------------------------------------

'Created by Erica Warren - erica.warren@macmillan.com
'3/20/2015: Added check if template is attached

'3/17/2015: Added Illustrations List
'3/16/2015: Fixed error creating text file, added title/author/isbn confirmation

'------------------------------------------------------------


Application.ScreenUpdating = False

'-------Check if Macmillan template is attached--------------

Dim currentTemplate As String
Dim ourTemplate1 As String
Dim ourTemplate2 As String

currentTemplate = ActiveDocument.BuiltInDocumentProperties(wdPropertyTemplate)
ourTemplate1 = "macmillan.dotm"
ourTemplate2 = "macmillan_NoColor.dotm"

Debug.Print "Current template is " & currentTemplate & vbNewLine

If currentTemplate <> ourTemplate1 Then
    If currentTemplate <> ourTemplate2 Then
        MsgBox "Please attach the Macmillan Style Template to this document and run the macro again."
        Exit Sub
    End If
End If


'-----make sure document is saved--------------------------

Dim mainDoc As Document
Set mainDoc = ActiveDocument
Dim iReply As Integer
Dim docSaved As Boolean

docSaved = mainDoc.Saved
If docSaved = False Then
    iReply = MsgBox("Your document '" & mainDoc & "' contains unsaved changes." & vbNewLine & vbNewLine & _
        "Click OK and I will save your document and run the macro." & vbNewLine & vbNewLine & "Click 'Cancel' to exit.", vbOKCancel, "Alert")
    If iReply = vbOK Then
        mainDoc.Save
    Else
        Exit Sub
    End If
End If

'-------Count number of occurences of each required style----

Dim styleName(6) As String                      ' Declare number of items in array
Dim styleCount(6) As Integer                    ' ditto
Dim a As Long

styleName(1) = "Titlepage Book Title (tit)"
styleName(2) = "Titlepage Author Name (au)"
styleName(3) = "span ISBN (isbn)"
styleName(4) = "Chap Number (cn)"
styleName(5) = "Chap Title (ct)"
styleName(6) = "Chap Number Nonprinting (cnp)"

For a = 1 To UBound(styleName())
    With ActiveDocument.Range.Find
        .ClearFormatting
        .Text = ""
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindStop
        .Format = True
        .Style = ActiveDocument.Styles(styleName(a))
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    Do While .Execute(Forward:=True) = True
        styleCount(a) = styleCount(a) + 1
    Loop
    End With
Next

Debug.Print styleName(1) & ": " & styleCount(1) & vbNewLine _
            ; styleName(2) & ": " & styleCount(2) & vbNewLine _
            ; styleName(3) & ": " & styleCount(3) & vbNewLine _
            ; styleName(4) & ": " & styleCount(4) & vbNewLine _
            ; styleName(5) & ": " & styleCount(5) & vbNewLine _
            ; styleName(6) & ": " & styleCount(6) & vbNewLine
            
'------------Get title/author/isbn text from document-----------

Dim styleNameB(3) As String         ' must declare number of items in array here
Dim bString(3) As String            ' and here
Dim b As Long

styleNameB(1) = "Titlepage Book Title (tit)"
styleNameB(2) = "Titlepage Author Name (au)"
styleNameB(3) = "span ISBN (isbn)"

'Search for required style, select, and copy
For b = 1 To UBound(styleNameB())
    Selection.Find.ClearFormatting
    Selection.Find.Style = ActiveDocument.Styles(styleNameB(b))
    With Selection.Find
        .Text = ""
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    bString(b) = Selection.Text
Next

Debug.Print "Title: " & bString(1) & vbNewLine & _
            "Author: " & bString(2) & vbNewLine & _
            "ISBN: " & bString(3) & vbNewLine
            
'-------------------Get Illustrations List from Document-----------

Dim cString As String
Dim iCount As Integer

'Move selection to start of document
Selection.HomeKey Unit:=wdStory

    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = ""
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindStop
        .Format = True
        .Style = ActiveDocument.Styles("Illustration holder (ill)")
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With

Do While Selection.Find.Execute = True And iCount < 1000            'iCount so we don't get an infinite loop
    iCount = iCount + 1
    cString = cString & Selection.Text & vbCrLf
Loop

'Move selection back to start of document
Selection.HomeKey Unit:=wdStory

If cString = "" Then
    cString = "no illustrations detected"
End If

Debug.Print cString

'-------------------Create error report----------------------------

' Prepare error message
Dim errorList As String
errorList = ""
If styleCount(1) = 0 Then errorList = errorList & "ERROR: No tagged title detected." & vbNewLine
If styleCount(1) > 1 Then errorList = errorList & "ERROR: Too many title paragraphs detected." & vbNewLine
If styleCount(2) = 0 Then errorList = errorList & "ERROR: No tagged author name detected." & vbNewLine
If styleCount(3) = 0 Then errorList = errorList & "ERROR: No tagged ISBN detected." & vbNewLine
If styleCount(4) = 0 And styleCount(5) = 0 And styleCount(6) = 0 Then errorList = errorList & "ERROR: No tagged chapter openers detected." & vbNewLine

Debug.Print errorList

'Create report file
Dim activeDoc As Document
Dim activeRng As Range
Set activeDoc = ActiveDocument
Set activeRng = ActiveDocument.Range
Dim activeDocName As String
Dim activeDocPath As String
Dim reqReportDoc As String
Dim reqReportDocAlt As String
Dim TheOS As String
TheOS = System.OperatingSystem
Dim fnum As Integer

'activeDocName below works for .doc and .docx
activeDocName = Left(activeDoc.Name, InStrRev(activeDoc.Name, ".doc") - 1)
activeDocPath = Replace(activeDoc.Path, activeDoc.Name, "")

'create text file
reqReportDoc = activeDocPath & activeDocName & "_BookmakerReport.txt"

''''for 32 char Mc OS bug- could check if this is Mac OS too < PART 1
If Not TheOS Like "*Mac*" Then                      'If Len(activeDocName) > 18 Then        (legacy, does not take path into account)
    reqReportDoc = activeDocPath & "\" & activeDocName & "_BookmakerReport.txt"
Else
    Dim placeholdDocName As String
    placeholdDocName = "filenamePlacehold_Report.txt"
    reqReportDocAlt = reqReportDoc
    reqReportDoc = "Macintosh HD:private:tmp:" & placeholdDocName
End If
'''end ''''for 32 char Mc OS bug part 1

'set and open file for output
fnum = FreeFile()
Open reqReportDoc For Output As fnum
If errorList = "" Then
    Print #fnum, vbCr
    Print #fnum, "CONGRATULATIONS! YOU PASSED!" & vbCr
    Print #fnum, "But you're not done yet. Please check the info listed below." & vbCr
    Print #fnum, vbCr
    Print #fnum, "-------------------------- METADATA ------------------------" & vbCr
    Print #fnum, vbCr
    Print #fnum, "Title: " & bString(1) & vbCr
    Print #fnum, "Author: " & bString(2) & vbCr
    Print #fnum, "ISBN: " & bString(3) & vbCr
    Print #fnum, vbCr
    Print #fnum, vbCr
    Print #fnum, "If any of these are incorrect, please fix the associated styles" & vbCr
    Print #fnum, "in the manuscript." & vbCr
    Print #fnum, vbCr
    Print #fnum, "-----------------------ILLUSTRATION LIST ---------------------" & vbCr
    Print #fnum, vbCr
    Print #fnum, cString & vbCr
    Print #fnum, vbCr
    
    If cString <> "no illustrations detected" Then
        Print #fnum, "Verify that the list of illustrations includes the correct file names" & vbCr
        Print #fnum, "and ONLY the file names for your illustrations. Place these files in" & vbCr
        Print #fnum, "the Submitted Images folder before you run the bookmaker tool." & vbCr
        Print #fnum, vbCr
        Print #fnum, vbCr
    End If

Else
    Print #fnum, "BAD NEWS:" & vbCr
    Print #fnum, vbCr
    Print #fnum, "Problems were found with the tags in your document '" & activeDoc.Name & "':" & vbCr
    Print #fnum, vbCr
    Print #fnum, vbCr
    Print #fnum, "--------------------------- ERRORS ---------------------------" & vbCr
    Print #fnum, errorList
    Print #fnum, vbCr
    Print #fnum, vbCr
End If
    Print #fnum, "------------------------- Tag Summary -------------------------" & vbCr
    Print #fnum, styleCount(1) & "  Titlepage Book Title (tit) paragraphs found."
    Print #fnum, styleCount(2) & "  Titlepage Author Name (au) paragraphs found."
    Print #fnum, styleCount(3) & "  span ISBN (isbn) paragraphs found."
    Print #fnum, styleCount(4) & "  Chap Number (cn) paragraphs found."
    Print #fnum, styleCount(5) & "  Chap Title (ct) paragraphs found."
    Print #fnum, styleCount(6) & "  Chap Number Nonprinting (cnp) paragraphs found."
Close #fnum

''''for 32 char Mc OS bug-<PART 2
If reqReportDocAlt <> "" Then
Name reqReportDoc As reqReportDocAlt
End If
''''END for 32 char Mac OS bug-<PART 2

'open Bookmaker Report for user once it is complete.
Dim Shex As Object

If Not TheOS Like "*Mac*" Then
   Set Shex = CreateObject("Shell.Application")
   Shex.Open (reqReportDoc)
Else
    MacScript ("tell application ""TextEdit"" " & vbCr & _
    "open " & """" & reqReportDocAlt & """" & " as alias" & vbCr & _
    "activate" & vbCr & _
    "end tell" & vbCr)
End If

Application.ScreenUpdating = True

End Sub